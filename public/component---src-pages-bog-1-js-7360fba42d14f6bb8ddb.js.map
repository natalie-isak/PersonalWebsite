{"version":3,"sources":["webpack:///./src/pages/bog1.js"],"names":["styled","div","theme","mixins","flexCenter","ArchivePage","location","revealTitle","data","allMarkdownRemark","edges","useRef","revealTable","revealProjects","useEffect","sr","reveal","current","srConfig","forEach","ref","i","title","className","pageQuery"],"mappings":"2FAAA,gJAU6BA,IAAOC,IAAV,iFAAGD,CAAH,grCA2GZ,qBAAGE,MAAkBC,OAAOC,cA6D3BC,UAhDK,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SAEfC,GAFoC,EAAXC,KACTC,kBAAkBC,MACpBC,iBAAO,OACrBC,EAAcD,iBAAO,MACrBE,EAAiBF,iBAAO,IAQ9B,OANAG,qBAAU,WACRC,IAAGC,OAAOT,EAAYU,QAASC,sBAC/BH,IAAGC,OAAOJ,EAAYK,QAASC,mBAAS,IAAK,IAC7CL,EAAeI,QAAQE,SAAQ,SAACC,EAAKC,GAAN,OAAYN,IAAGC,OAAOI,EAAKF,mBAAa,GAAJG,SAClE,IAGD,kBAAC,IAAD,CAAQf,SAAUA,GAChB,kBAAC,IAAD,CAAQgB,MAAM,6BAEd,8BACE,4BAAQF,IAAKb,GACX,wBAAIgB,UAAU,eAAd,mBACA,uBAAGA,UAAU,YAAb,iDAIJ,8BACE,s5JA0BD,IAAMC,EAAS","file":"component---src-pages-bog-1-js-7360fba42d14f6bb8ddb.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport styled from 'styled-components';\nimport { srConfig } from '@config';\nimport sr from '@utils/sr';\nimport { Layout } from '@components';\nimport { Icon } from '@components/icons';\n\nconst StyledTableContainer = styled.div`\n  margin: 100px -20px;\n\n  @media (max-width: 768px) {\n    margin: 50px -10px;\n  }\n\n  table {\n    width: 100%;\n    border-collapse: collapse;\n\n    .hide-on-mobile {\n      @media (max-width: 768px) {\n        display: none;\n      }\n    }\n\n    tbody tr {\n      &:hover,\n      &:focus {\n        background-color: var(--light-navy);\n      }\n    }\n\n    th,\n    td {\n      padding: 10px;\n      text-align: left;\n\n      &:first-child {\n        padding-left: 20px;\n\n        @media (max-width: 768px) {\n          padding-left: 10px;\n        }\n      }\n      &:last-child {\n        padding-right: 20px;\n\n        @media (max-width: 768px) {\n          padding-right: 10px;\n        }\n      }\n\n      svg {\n        width: 20px;\n        height: 20px;\n      }\n    }\n\n    tr {\n      cursor: default;\n\n      td:first-child {\n        border-top-left-radius: var(--border-radius);\n        border-bottom-left-radius: var(--border-radius);\n      }\n      td:last-child {\n        border-top-right-radius: var(--border-radius);\n        border-bottom-right-radius: var(--border-radius);\n      }\n    }\n\n    td {\n      &.year {\n        padding-right: 20px;\n\n        @media (max-width: 768px) {\n          padding-right: 10px;\n          font-size: var(--fz-sm);\n        }\n      }\n\n      &.title {\n        padding-top: 15px;\n        padding-right: 20px;\n        color: var(--lightest-slate);\n        font-size: var(--fz-xl);\n        font-weight: 600;\n        line-height: 1.25;\n      }\n\n      &.company {\n        font-size: var(--fz-lg);\n        white-space: nowrap;\n      }\n\n      &.tech {\n        font-size: var(--fz-xxs);\n        font-family: var(--font-mono);\n        line-height: 1.5;\n        .separator {\n          margin: 0 5px;\n        }\n        span {\n          display: inline-block;\n        }\n      }\n\n      &.links {\n        min-width: 100px;\n\n        div {\n          display: flex;\n          align-items: center;\n\n          a {\n            ${({ theme }) => theme.mixins.flexCenter};\n            flex-shrink: 0;\n          }\n\n          a + a {\n            margin-left: 10px;\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ArchivePage = ({ location, data }) => {\n  const projects = data.allMarkdownRemark.edges;\n  const revealTitle = useRef(null);\n  const revealTable = useRef(null);\n  const revealProjects = useRef([]);\n\n  useEffect(() => {\n    sr.reveal(revealTitle.current, srConfig());\n    sr.reveal(revealTable.current, srConfig(200, 0));\n    revealProjects.current.forEach((ref, i) => sr.reveal(ref, srConfig(i * 10)));\n  }, []);\n\n  return (\n    <Layout location={location}>\n      <Helmet title=\"The Self Driving Trolley\" />\n\n      <main>\n        <header ref={revealTitle}>\n          <h1 className=\"big-heading\">by Natalie Isak</h1>\n          <p className=\"subtitle\">Published Thursday, August 15, 2019 7:06 PM</p>\n        </header>\n\n      </main>\n      <body>\n        <p> The “trolley problem” is an age-old philosophical conundrum that encapsulates\n        the core of philosophical debate: is it more moral to do a bad thing or to let a\n        worse thing happen?\n        Pippa Foot first proposed this thought experiment in 1967,\n        and at the time it was just that: a thought experiment. Today, however,\n        this situation is far from hypothetical. The traditional “trolley problem”\n        begins like so: a person is driving a trolley on a track with five men\n        working ahead, and one man working on the track to the right. The\n        driver can either continue driving and let the five workers in the way die,\n        or s/he can shift the train’s direction to the right and kill only one\n        worker. Overall, this predicament is meant to showcase the core\n        difference between utilitarian and deontological philosophies.\n        In this situation, a deontologist would argue that one ought to\n         let the five people die rather than kill one person. Deontologists believe that the morality of an action can be determined by analyzing the intention, rather than the consequence, of the action in accordance with a set of rules. These “rules” were proposed by Immanuel Kant and are traditionally known as the Categorical Imperative. The second principle of such imperative can be applied to the “trolley problem” since the driver would be using the one person as a means to an end. In other words, even if the end state of the action is favorable, it cannot be justified if it requires compromising the autonomy -- or freedom -- of another. On the other hand, a utilitarian would argue that the agent should always choose to kill one person die to save five. Utilitarianism is the philosophical belief that a moral action must maximize utility, or in other words, maximize pleasure. This theory only accounts for the consequences of actions, and therefore a utilitarian would disregard the distinction between positive and negative duties since these duties are only important when analyzing the intent of an agent. Only the end-result of the action -- one dead versus five dead -- would be morally relevant. Thus, a utilitarian would choose to turn the trolly right in order to maximize lives. Utilitarians believe this would be the morally correct course of action since the actor is maximizing life, and therefore happiness, for the greatest number of people. Today, if you replace “trolley” with “self-driving car,” you have one of the largest moral dilemmas facing companies such as GM and Ford. In the future, it will be programmers, not drivers, making life-or-death decisions. For example, if the brakes fail, should the car continue driving and hit five pedestrians? Or should it swerve, thereby killing the passenger? For an interesting simulation demonstrating the intricate situations engineers must consider, click here. I believe that given the unreliability and novelty of self-driving cars, one must refrain from purely deontological or consequentialist logic and always air on the side of killing the passenger, or passengers. The technology for self-driving cars is relatively new, and therefore it will take years before self-driving cars gain the full trust of the public. Given the controversial nature of the “trolley problem” and of self-driving cars, it would be wrong to impose (relatively) arbitrary moral decisions on the general population. Pedestrians, for instance, never consented to having self-driving cars. Thus, it would be immoral to have them pay the fatal consequences of self-driving cars. However, the people inside the self-driving cars did consent to the dangers of riding in a self-driving car, and therefore, it would be more acceptable to have them suffer the consequences. This view is largely in accordance with the belief that negative duties outweigh positive duties. Meaning, self-driving cars have a larger duty not to interfere with the lives of others (the pedestrians) than to provide aid. Given a utilitarian situation, even if it would be possible to swerve to save five passengers and kill one pedestrian, it would be immoral to do so given the negative duty not to harm the pedestrian. Conversely, in a deontological situation, if the car had the option of steering to save five passengers or staying on track to kill one pedestrian, a deontologist would argue it is best to stay on track and kill one pedestrian. However, in the context of self-driving cars, it would be morally preferable to swerve the car and kill the five passengers to avoid killing the uninvolved pedestrian. In conclusion, the “trolley problem” is an interesting philosophical thought experiment with infinite implications on the self-driving car business. Despite the allure of traditional approaches, however, it is ultimately infeasible to approach this issue from a purely deontological or utilitarian perspective. Until companies gain the trust and respect of the public, the self-driving car business ought to continue to have customers themselves bear the potential consequences.</p>\n      </body>\n    </Layout>\n\n  );\n};\nArchivePage.propTypes = {\n  location: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport default ArchivePage;\n\nexport const pageQuery = graphql`\n  {\n          allMarkdownRemark(\n            filter: {fileAbsolutePath: {regex: \"/projects/\" } }\n      sort: {fields: [frontmatter___date], order: DESC }\n    ) {\n          edges {\n          node {\n          frontmatter {\n          date\n            title\n            tech\n            github\n            external\n            ios\n            android\n            company\n          }\n          html\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}